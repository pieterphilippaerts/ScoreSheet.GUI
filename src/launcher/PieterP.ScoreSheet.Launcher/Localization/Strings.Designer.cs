//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PieterP.ScoreSheet.Launcher.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PieterP.ScoreSheet.Launcher.Localization.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changes made.
        /// </summary>
        public static string App_ChangesMade {
            get {
                return ResourceManager.GetString("App_ChangesMade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No changes made.
        /// </summary>
        public static string App_NoChangesMade {
            get {
                return ResourceManager.GetString("App_NoChangesMade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while starting ScoreSheet. No (correctly) installed version could be found..
        /// </summary>
        public static string App_NoVersionFound {
            get {
                return ResourceManager.GetString("App_NoVersionFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ScoreSheet Launcher.
        /// </summary>
        public static string App_Title {
            get {
                return ResourceManager.GetString("App_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TLS 1.1 and 1.2 were successfully enabled!.
        /// </summary>
        public static string App_TlsEnabled {
            get {
                return ResourceManager.GetString("App_TlsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while turning on TLS 1.1 and 1.2. You may not have the correct rights to make these changes..
        /// </summary>
        public static string App_TlsNotEnabled {
            get {
                return ResourceManager.GetString("App_TlsNotEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        public static string Main_Cancel {
            get {
                return ResourceManager.GetString("Main_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to created on {0}.
        /// </summary>
        public static string Main_CreatedOn {
            get {
                return ResourceManager.GetString("Main_CreatedOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to create new profile.
        /// </summary>
        public static string Main_CreateNewProfile {
            get {
                return ResourceManager.GetString("Main_CreateNewProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If there is a problem with the program (for example if it crashes), you can start the program in &apos;debug mode&apos;. This will not solve the problem, but in this mode the program will store extra information in the log files that can be used to find the source of the error..
        /// </summary>
        public static string Main_DebugMode {
            get {
                return ResourceManager.GetString("Main_DebugMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to default.
        /// </summary>
        public static string Main_Default {
            get {
                return ResourceManager.GetString("Main_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (default profile).
        /// </summary>
        public static string Main_DefaultProfile {
            get {
                return ResourceManager.GetString("Main_DefaultProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Highest installed version.
        /// </summary>
        public static string Main_HighestInstalled {
            get {
                return ResourceManager.GetString("Main_HighestInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to installed on {0}.
        /// </summary>
        public static string Main_InstalledOn {
            get {
                return ResourceManager.GetString("Main_InstalledOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change start options.
        /// </summary>
        public static string Main_ModifyStartOptions {
            get {
                return ResourceManager.GetString("Main_ModifyStartOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Here you will find the ScoreSheet start options that you can change. You can do this once, or you can set new default values..
        /// </summary>
        public static string Main_ModifyStartOptionsMessage {
            get {
                return ResourceManager.GetString("Main_ModifyStartOptionsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        public static string Main_OK {
            get {
                return ResourceManager.GetString("Main_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile.
        /// </summary>
        public static string Main_Profile {
            get {
                return ResourceManager.GetString("Main_Profile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile name:.
        /// </summary>
        public static string Main_ProfileName {
            get {
                return ResourceManager.GetString("Main_ProfileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The profile name cannot contain special symbols that are not valid in a directory name..
        /// </summary>
        public static string Main_ProfileNameValidation {
            get {
                return ResourceManager.GetString("Main_ProfileNameValidation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (recommended option).
        /// </summary>
        public static string Main_Recommended {
            get {
                return ResourceManager.GetString("Main_Recommended", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start.
        /// </summary>
        public static string Main_Start {
            get {
                return ResourceManager.GetString("Main_Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start in debug mode.
        /// </summary>
        public static string Main_StartDebugMode {
            get {
                return ResourceManager.GetString("Main_StartDebugMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        public static string Main_Version {
            get {
                return ResourceManager.GetString("Main_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        public static string Prereq_Close {
            get {
                return ResourceManager.GetString("Prereq_Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .NET Framework 4.5 or higher required.
        /// </summary>
        public static string Prereq_Netfx {
            get {
                return ResourceManager.GetString("Prereq_Netfx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download .NET Framework 4.5.
        /// </summary>
        public static string Prereq_NetfxDownload {
            get {
                return ResourceManager.GetString("Prereq_NetfxDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version of the .NET Framework installed on this computer is too old. You must install the .NET Framework version 4.5 or higher..
        /// </summary>
        public static string Prereq_NetfxErr {
            get {
                return ResourceManager.GetString("Prereq_NetfxErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You already have .NET Framework 4.5 or higher installed on this computer..
        /// </summary>
        public static string Prereq_NetfxOk {
            get {
                return ResourceManager.GetString("Prereq_NetfxOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Read more information about this.
        /// </summary>
        public static string Prereq_ReadMore {
            get {
                return ResourceManager.GetString("Prereq_ReadMore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TLS 1.1 or higher required.
        /// </summary>
        public static string Prereq_Tls {
            get {
                return ResourceManager.GetString("Prereq_Tls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable TLS 1.1/1.2 support.
        /// </summary>
        public static string Prereq_TlsEnable {
            get {
                return ResourceManager.GetString("Prereq_TlsEnable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The support for TLS 1.1 or higher is not enabled on this system. As a result, ScoreSheet may not be able to download data from the competition website. Fortunately, Windows 7 does support this protocol, so you can simply enable it..
        /// </summary>
        public static string Prereq_TlsErrW7 {
            get {
                return ResourceManager.GetString("Prereq_TlsErrW7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Vista does not support TLS 1.1 by default, but it can be turned on in an unofficial way..
        /// </summary>
        public static string Prereq_TlsErrWV {
            get {
                return ResourceManager.GetString("Prereq_TlsErrWV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This system supports TLS 1.1 or higher.
        /// </summary>
        public static string Prereq_TlsOk {
            get {
                return ResourceManager.GetString("Prereq_TlsOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uhoh!.
        /// </summary>
        public static string Prereq_Uhoh {
            get {
                return ResourceManager.GetString("Prereq_Uhoh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your system does not meet the requirements for ScoreSheet to work correctly. Below you will find an overview of the requirements that may or may not have been met..
        /// </summary>
        public static string Prereq_Warning {
            get {
                return ResourceManager.GetString("Prereq_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Vista or higher required.
        /// </summary>
        public static string Prereq_Windows {
            get {
                return ResourceManager.GetString("Prereq_Windows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;re running on an old version of Windows. This version is no longer supported..
        /// </summary>
        public static string Prereq_WindowsErr {
            get {
                return ResourceManager.GetString("Prereq_WindowsErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;re running on Windows Vista or higher..
        /// </summary>
        public static string Prereq_WindowsOk {
            get {
                return ResourceManager.GetString("Prereq_WindowsOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (default).
        /// </summary>
        public static string Profile_Default {
            get {
                return ResourceManager.GetString("Profile_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to set as default.
        /// </summary>
        public static string Profile_SetAsDefault {
            get {
                return ResourceManager.GetString("Profile_SetAsDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (default).
        /// </summary>
        public static string Version_Default {
            get {
                return ResourceManager.GetString("Version_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to set as default.
        /// </summary>
        public static string Version_SetAsDefault {
            get {
                return ResourceManager.GetString("Version_SetAsDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unavailable.
        /// </summary>
        public static string Version_Unavailable {
            get {
                return ResourceManager.GetString("Version_Unavailable", resourceCulture);
            }
        }
    }
}

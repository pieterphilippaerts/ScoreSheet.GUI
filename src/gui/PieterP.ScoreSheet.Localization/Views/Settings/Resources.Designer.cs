//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PieterP.ScoreSheet.Localization.Views.Settings {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PieterP.ScoreSheet.Localization.Views.Settings.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order not to forget to upload the score sheets to the competition website, ScoreSheet can automatically upload the score sheets when they are printed..
        /// </summary>
        public static string AutoUpload_Description {
            get {
                return ResourceManager.GetString("AutoUpload_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically upload score sheets when they are printed.
        /// </summary>
        public static string AutoUpload_Enable {
            get {
                return ResourceManager.GetString("AutoUpload_Enable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-competitive matches (like Limburg&apos;s leisure competition) are never uploaded..
        /// </summary>
        public static string AutoUpload_NonCompetitive {
            get {
                return ResourceManager.GetString("AutoUpload_NonCompetitive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ATTENTION: a score sheet will only be uploaded if there are no validation errors! If you want to ignore validation errors in a score sheet, you must upload it manually via the Upload menu..
        /// </summary>
        public static string AutoUpload_Warning {
            get {
                return ResourceManager.GetString("AutoUpload_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of away matches today:.
        /// </summary>
        public static string AwayMatches_AwayMatchesToday {
            get {
                return ResourceManager.GetString("AwayMatches_AwayMatchesToday", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ScoreSheet can periodically check the competition website to see whether (interim) results are available for teams playing an away match on the same day. The results of the teams will then be shown in the match overview..
        /// </summary>
        public static string AwayMatches_Description {
            get {
                return ResourceManager.GetString("AwayMatches_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This functionality only works if the club where the team plays uses live updates. It is therefore possible that you do not see the results of all the teams..
        /// </summary>
        public static string AwayMatches_ExtraInfo {
            get {
                return ResourceManager.GetString("AwayMatches_ExtraInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Follow away matches.
        /// </summary>
        public static string AwayMatches_FollowAway {
            get {
                return ResourceManager.GetString("AwayMatches_FollowAway", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This functionality only works if &apos;live updates&apos; is turned on for all matches!.
        /// </summary>
        public static string AwayMatches_Warning {
            get {
                return ResourceManager.GetString("AwayMatches_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The home club address: (leave blank to use the address that is in the competition database).
        /// </summary>
        public static string Defaults_Address {
            get {
                return ResourceManager.GetString("Defaults_Address", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When creating a new score sheet, these settings will override the default values..
        /// </summary>
        public static string Defaults_Description {
            get {
                return ResourceManager.GetString("Defaults_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ... except for Super league.
        /// </summary>
        public static string Defaults_ExceptSuperLeague {
            get {
                return ResourceManager.GetString("Defaults_ExceptSuperLeague", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select &apos;two by two&apos; by default.
        /// </summary>
        public static string Defaults_TwoByTwo {
            get {
                return ResourceManager.GetString("Defaults_TwoByTwo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the language for the user interface of this program below..
        /// </summary>
        public static string Language_Description {
            get {
                return ResourceManager.GetString("Language_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Find out more.
        /// </summary>
        public static string Language_HelpLink {
            get {
                return ResourceManager.GetString("Language_HelpLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We are still looking for help translating this program. Did you find a language mistake, or do you want to translate the application to a another language? Then click on the link below ....
        /// </summary>
        public static string Language_HelpMessage {
            get {
                return ResourceManager.GetString("Language_HelpMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sie müssen das Programm neu starten, damit diese Änderung wirksam wird..
        /// </summary>
        public static string Language_RestartDe {
            get {
                return ResourceManager.GetString("Language_RestartDe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must restart the program for this change to take effect..
        /// </summary>
        public static string Language_RestartEn {
            get {
                return ResourceManager.GetString("Language_RestartEn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vous devez redémarrer le programme pour que cette modification soit prise en compte..
        /// </summary>
        public static string Language_RestartFr {
            get {
                return ResourceManager.GetString("Language_RestartFr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to U moet het programma herstarten om deze wijziging door te voeren..
        /// </summary>
        public static string Language_RestartNl {
            get {
                return ResourceManager.GetString("Language_RestartNl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Background color.
        /// </summary>
        public static string Layout_Background {
            get {
                return ResourceManager.GetString("Layout_Background", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the theme that you want to use for the score sheet..
        /// </summary>
        public static string Layout_Description {
            get {
                return ResourceManager.GetString("Layout_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error (background):.
        /// </summary>
        public static string Layout_ErrorBackground {
            get {
                return ResourceManager.GetString("Layout_ErrorBackground", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error (text):.
        /// </summary>
        public static string Layout_ErrorText {
            get {
                return ResourceManager.GetString("Layout_ErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click on the color to change it.
        /// </summary>
        public static string Layout_Info {
            get {
                return ResourceManager.GetString("Layout_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text color:.
        /// </summary>
        public static string Layout_Text {
            get {
                return ResourceManager.GetString("Layout_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Textbox color:.
        /// </summary>
        public static string Layout_TextField {
            get {
                return ResourceManager.GetString("Layout_TextField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Despite the fact that the password is stored securely, we do not recommend that you use a personal email address. It is better to create a free Hotmail or GMail address that is managed by the club and is only used to send these results..
        /// </summary>
        public static string LimburgFreeTime_AddressWarning {
            get {
                return ResourceManager.GetString("LimburgFreeTime_AddressWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send a copy of the emails to the club email address.
        /// </summary>
        public static string LimburgFreeTime_CC {
            get {
                return ResourceManager.GetString("LimburgFreeTime_CC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Results of the Limburg leisure competition must not be uploaded, but must be sent via email to the leisure committee. If you enter the requested e-mail settings below, ScoreSheet can send the match sheets directly from the program..
        /// </summary>
        public static string LimburgFreeTime_Description {
            get {
                return ResourceManager.GetString("LimburgFreeTime_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Email address settings.
        /// </summary>
        public static string LimburgFreeTime_EmailSettings {
            get {
                return ResourceManager.GetString("LimburgFreeTime_EmailSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Host:.
        /// </summary>
        public static string LimburgFreeTime_Host {
            get {
                return ResourceManager.GetString("LimburgFreeTime_Host", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Club email:.
        /// </summary>
        public static string LimburgFreeTime_MailFrom {
            get {
                return ResourceManager.GetString("LimburgFreeTime_MailFrom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the email address of (someone from) the club that the person in charge of the leisure competition can use if there are questions about the score sheet..
        /// </summary>
        public static string LimburgFreeTime_MailFromDesc {
            get {
                return ResourceManager.GetString("LimburgFreeTime_MailFromDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send to:.
        /// </summary>
        public static string LimburgFreeTime_MailTo {
            get {
                return ResourceManager.GetString("LimburgFreeTime_MailTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the email address of the person responsible for the results of the leisure competition, as determined by the provincial committee..
        /// </summary>
        public static string LimburgFreeTime_MailToDesc {
            get {
                return ResourceManager.GetString("LimburgFreeTime_MailToDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password:.
        /// </summary>
        public static string LimburgFreeTime_Password {
            get {
                return ResourceManager.GetString("LimburgFreeTime_Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port:.
        /// </summary>
        public static string LimburgFreeTime_Port {
            get {
                return ResourceManager.GetString("LimburgFreeTime_Port", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get help finding the correct SMTP settings.
        /// </summary>
        public static string LimburgFreeTime_SmtpHelp {
            get {
                return ResourceManager.GetString("LimburgFreeTime_SmtpHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SMTP settings.
        /// </summary>
        public static string LimburgFreeTime_SmtpSettings {
            get {
                return ResourceManager.GetString("LimburgFreeTime_SmtpSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test the email settings.
        /// </summary>
        public static string LimburgFreeTime_TestSettings {
            get {
                return ResourceManager.GetString("LimburgFreeTime_TestSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username:.
        /// </summary>
        public static string LimburgFreeTime_Username {
            get {
                return ResourceManager.GetString("LimburgFreeTime_Username", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use STARTTLS.
        /// </summary>
        public static string LimburgFreeTime_UseStartTls {
            get {
                return ResourceManager.GetString("LimburgFreeTime_UseStartTls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ATTENTION: this functionality has not yet been officially approved by those responsible for the recreational competition..
        /// </summary>
        public static string LimburgFreeTime_Warning {
            get {
                return ResourceManager.GetString("LimburgFreeTime_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ScoreSheet can send interim results of the matches at regular intervals to the competition website. That way, someone who is not in the room can still follow the matches via the competition website. It is recommended to enable this option in Super league matches, but it can also be used for matches at any other level..
        /// </summary>
        public static string LiveUpdates_Description {
            get {
                return ResourceManager.GetString("LiveUpdates_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable &apos;Live Updates&apos;.
        /// </summary>
        public static string LiveUpdates_Enable {
            get {
                return ResourceManager.GetString("LiveUpdates_Enable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If &apos;live updates&apos; is not switched on for all matches, the &apos;follow away matches&apos; option will not work..
        /// </summary>
        public static string LiveUpdates_FollowAwayWarning {
            get {
                return ResourceManager.GetString("LiveUpdates_FollowAwayWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-competitive matches (like Limburg&apos;s leisure competition) are never uploaded..
        /// </summary>
        public static string LiveUpdates_NonCompetitive {
            get {
                return ResourceManager.GetString("LiveUpdates_NonCompetitive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ... but only for Super league matches.
        /// </summary>
        public static string LiveUpdates_OnlySuper {
            get {
                return ResourceManager.GetString("LiveUpdates_OnlySuper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ATTENTION: if this option is switched on, you still have to upload the match as usual at the end of a match day!.
        /// </summary>
        public static string LiveUpdates_UploadWarning {
            get {
                return ResourceManager.GetString("LiveUpdates_UploadWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Print via Adobe Acrobat (Reader).
        /// </summary>
        public static string PrintDefaults_Adobe {
            get {
                return ResourceManager.GetString("PrintDefaults_Adobe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can print score sheets directly from the application, or you can choose to print via Adobe Acrobat (Reader). If you cannot print directly from the application, it is best to choose the Adobe Acrobat option..
        /// </summary>
        public static string PrintDefaults_Description {
            get {
                return ResourceManager.GetString("PrintDefaults_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Print directly from the application.
        /// </summary>
        public static string PrintDefaults_Direct {
            get {
                return ResourceManager.GetString("PrintDefaults_Direct", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Layout referee score cards:.
        /// </summary>
        public static string PrintDefaults_ScoreCardLayout {
            get {
                return ResourceManager.GetString("PrintDefaults_ScoreCardLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic search.
        /// </summary>
        public static string PrintDefaults_Search {
            get {
                return ResourceManager.GetString("PrintDefaults_Search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Print sponsors on the score sheet.
        /// </summary>
        public static string PrintDefaults_Sponsors {
            get {
                return ResourceManager.GetString("PrintDefaults_Sponsors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically choose a monitor.
        /// </summary>
        public static string SecondScreen_Auto {
            get {
                return ResourceManager.GetString("SecondScreen_Auto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ScoreSheet supports showing the interim results on an extra screen or projector. To use this feature, you must enable this extra screen in Windows as an &quot;extended desktop&quot;..
        /// </summary>
        public static string SecondScreen_Description {
            get {
                return ResourceManager.GetString("SecondScreen_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable support for multiple monitors.
        /// </summary>
        public static string SecondScreen_Enable {
            get {
                return ResourceManager.GetString("SecondScreen_Enable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manually choose a monitor.
        /// </summary>
        public static string SecondScreen_Manual {
            get {
                return ResourceManager.GetString("SecondScreen_Manual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        public static string Settings_Close {
            get {
                return ResourceManager.GetString("Settings_Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In this window you can change the settings of the application.
        /// </summary>
        public static string Settings_Description {
            get {
                return ResourceManager.GetString("Settings_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change settings.
        /// </summary>
        public static string Settings_Title {
            get {
                return ResourceManager.GetString("Settings_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By default, the most recent version of the program will always be run, and the user data will be saved in the standard user profile. However, you can also choose to start an older version (for example when you have problems with a new version), or to create an extra profile. That extra profile can be used to store the data of another club (which is useful if one computer is used by several clubs).
        ///
        ///You can adjust these startup properties by holding down the SHIFT key while starting the program. You will t [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Startup_Info {
            get {
                return ResourceManager.GetString("Startup_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To upload the results to the competition website, you need a username and password with the correct permissions. If you do not want to enter this username/password each time, you can save it (securely)..
        /// </summary>
        public static string Upload_Description {
            get {
                return ResourceManager.GetString("Upload_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password:.
        /// </summary>
        public static string Upload_Password {
            get {
                return ResourceManager.GetString("Upload_Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test the username/password combination.
        /// </summary>
        public static string Upload_Test {
            get {
                return ResourceManager.GetString("Upload_Test", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username:.
        /// </summary>
        public static string Upload_Username {
            get {
                return ResourceManager.GetString("Upload_Username", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turn on CAPS-LOCK at program start.
        /// </summary>
        public static string Various_CapsLock {
            get {
                return ResourceManager.GetString("Various_CapsLock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete old match data.
        /// </summary>
        public static string Various_DeleteOld {
            get {
                return ResourceManager.GetString("Various_DeleteOld", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic start-up in full-screen mode.
        /// </summary>
        public static string Various_FullScreen {
            get {
                return ResourceManager.GetString("Various_FullScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide navigation bar automatically.
        /// </summary>
        public static string Various_HideNav {
            get {
                return ResourceManager.GetString("Various_HideNav", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (only works in full screen mode).
        /// </summary>
        public static string Various_HideNavInfo {
            get {
                return ResourceManager.GetString("Various_HideNavInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show match results in the navigation bar.
        /// </summary>
        public static string Various_ShowResultsInNavigation {
            get {
                return ResourceManager.GetString("Various_ShowResultsInNavigation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The web service is now active.
        /// </summary>
        public static string WebService_Activated {
            get {
                return ResourceManager.GetString("WebService_Activated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can make the results of the matches available externally via a Json web service. This web service can then be consumed by, for example, an HTML page that you can completely customize as you wish.
        ///
        ///This option is for advanced use. For a more user-friendly experience, choose the &apos;Second Screen&apos; option..
        /// </summary>
        public static string WebService_Description {
            get {
                return ResourceManager.GetString("WebService_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activate Json service.
        /// </summary>
        public static string WebService_Enable {
            get {
                return ResourceManager.GetString("WebService_Enable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error starting the web service. Check the log for the exact cause..
        /// </summary>
        public static string WebService_Error {
            get {
                return ResourceManager.GetString("WebService_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can only adjust the host and port if you deactivate the web service..
        /// </summary>
        public static string WebService_ModifyInfo {
            get {
                return ResourceManager.GetString("WebService_ModifyInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open the service in a web browser.
        /// </summary>
        public static string WebService_OpenBrowser {
            get {
                return ResourceManager.GetString("WebService_OpenBrowser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go to the online help page.
        /// </summary>
        public static string WebService_OpenMoreInfo {
            get {
                return ResourceManager.GetString("WebService_OpenMoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port:.
        /// </summary>
        public static string WebService_Port {
            get {
                return ResourceManager.GetString("WebService_Port", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Give permissions for this url.
        /// </summary>
        public static string WebService_UnblockAddress {
            get {
                return ResourceManager.GetString("WebService_UnblockAddress", resourceCulture);
            }
        }
    }
}

<Window x:Class="PieterP.ScoreSheet.GUI.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PieterP.ScoreSheet.GUI"
        xmlns:view="clr-namespace:PieterP.ScoreSheet.GUI.Views"
        xmlns:conv="clr-namespace:PieterP.ScoreSheet.GUI.Converters"
        xmlns:behaviors="clr-namespace:PieterP.ScoreSheet.GUI.Behaviors"
        xmlns:l="clr-namespace:PieterP.ScoreSheet.Localization.Views;assembly=ScoreSheet.Localization"
        mc:Ignorable="d"
        Title="{Binding AppTitle.Value}" Height="750" Width="1200"
        behaviors:WindowClosingBehavior.Closing="{Binding DoQuit}" ResizeMode="CanResizeWithGrip">
    <Window.Resources>
        <conv:FloatToPercentageConverter x:Key="PercentageConverter" />
        <conv:ZoomableConverter x:Key="ZoomableConverter" />
        <conv:StatusBackgroundConverter x:Key="StatusBackgroundConverter" />
        <conv:ActiveForegroundConverter x:Key="ActiveForegroundConverter"/>
        <conv:StatusTooltipConverter x:Key="StatusTooltipConverter"/>
        <conv:StatusFillConverter x:Key="StatusFillConverter"/>        
        <conv:BoolToObjectConverter x:Key="StyleConverter">
            <conv:BoolToObjectConverter.TrueValue>
                <WindowStyle>None</WindowStyle>
            </conv:BoolToObjectConverter.TrueValue>
            <conv:BoolToObjectConverter.FalseValue>
                <WindowStyle>SingleBorderWindow</WindowStyle>
            </conv:BoolToObjectConverter.FalseValue>
        </conv:BoolToObjectConverter>
        <conv:BoolToObjectConverter x:Key="VisibilityConverter">
            <conv:BoolToObjectConverter.TrueValue>
                <Visibility>Visible</Visibility>
            </conv:BoolToObjectConverter.TrueValue>
            <conv:BoolToObjectConverter.FalseValue>
                <Visibility>Collapsed</Visibility>
            </conv:BoolToObjectConverter.FalseValue>
        </conv:BoolToObjectConverter>
        <conv:ContextMenuEnabledConverter x:Key="ContextMenuEnabledConverter"/>
        <conv:ObjectToVisibilityConverter x:Key="UpdateStatusVisibilityConverter"/>
        <conv:CultureImageConverter x:Key="FlagConverter"/>
        <conv:ResultConverter x:Key="ResultConverter"/>
        <conv:CultureRestartConverter x:Key="CultureRestartConverter"/>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="O" Modifiers="Control" Command="{Binding Open}"/>
        <KeyBinding Key="S" Modifiers="Ctrl"  Command="{Binding SaveAs}"/>
        <KeyBinding Key="F11" Command="{Binding FullScreen}"/>
    </Window.InputBindings>
    <DockPanel>
        <Menu DockPanel.Dock="Top" BorderThickness="0 1" BorderBrush="DarkGray" behaviors:MouseTrackingBehavior.OnMouseEnter="{Binding ShowNavigation}">
            <MenuItem Header="{x:Static l:Resources.MainWindow_MenuFile}">
                <MenuItem Header="{x:Static l:Resources.MainWindow_MenuNew}">
                    <MenuItem.Icon>
                        <Image Source="/images/ico_new.png"/>
                    </MenuItem.Icon>
                    <MenuItem Header="{x:Static l:Resources.MainWindow_MenuScoreSheet}" Command="{Binding NewCustomMatch}"/>
                    <MenuItem Header="{x:Static l:Resources.MainWindow_MenuMatchDay}" Command="{Binding NewMatchday}"/>
                    <MenuItem Header="{x:Static l:Resources.MainWindow_MenuDivisionDay}" Command="{Binding NewDivisionDay}"/>
                </MenuItem>
                <MenuItem Header="{x:Static l:Resources.MainWindow_MenuOpen}" Command="{Binding Open}" InputGestureText="Ctrl+O">
                    <MenuItem.Icon>
                        <Image Source="/images/ico_open.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{x:Static l:Resources.MainWindow_MenuClose}" Command="{Binding Close}" />
                <MenuItem Header="{x:Static l:Resources.MainWindow_MenuCloseAll}" Command="{Binding CloseAll}" />
                <MenuItem Header="{x:Static l:Resources.MainWindow_MenuSave}" Command="{Binding Save}" Visibility="{Binding IsEnabled, Converter={StaticResource VisibilityConverter}, RelativeSource={x:Static RelativeSource.Self}}">
                    <MenuItem.Icon>
                        <Image Source="/images/ico_save.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{x:Static l:Resources.MainWindow_MenuSaveAs}" Command="{Binding SaveAs}" Visibility="{Binding IsEnabled, Converter={StaticResource VisibilityConverter}, RelativeSource={x:Static RelativeSource.Self}}" InputGestureText="Ctrl+S" />
                <Separator/>
                <MenuItem Header="{x:Static l:Resources.MainWindow_MenuPrint}" Command="{Binding Print}">
                    <MenuItem.Icon>
                        <Image Source="/images/ico_print.png"/>
                    </MenuItem.Icon>
               </MenuItem>
                <MenuItem Header="{x:Static l:Resources.MainWindow_MenuExport}" Command="{Binding Export}" />
                <MenuItem Header="{x:Static l:Resources.MainWindow_MenuUpload}" Command="{Binding Upload}">
                    <MenuItem.Icon>
                        <Image Source="/images/ico_vttl.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <!--<MenuItem Header="{x:Static l:Resources.MainWindow_MenuEmail}" Command="{Binding Email}" Visibility="{Binding IsEnabled, Converter={StaticResource VisibilityConverter}, RelativeSource={x:Static RelativeSource.Self}}">
                    <MenuItem.Icon>
                        <Image Source="/images/i16_limburg1.png"/>
                    </MenuItem.Icon>
                </MenuItem>-->
                <Separator/>
                <MenuItem Header="{x:Static l:Resources.MainWindow_MenuExit}" Command="{Binding Quit}" />
            </MenuItem>
            <MenuItem Header="{x:Static l:Resources.MainWindow_MenuOptions}">
                <MenuItem Header="{x:Static l:Resources.MainWindow_MenuFullScreen}" InputGestureText="F11" Command="{Binding FullScreen}" />
                <MenuItem Header="{x:Static l:Resources.MainWindow_MenuUpdate}">
                    <MenuItem Header="{x:Static l:Resources.MainWindow_MenuUpdateDatabase}" Command="{Binding Update}" />
                    <MenuItem Header="{x:Static l:Resources.MainWindow_MenuSaveUpdateFile}" Command="{Binding SaveUpdateFile}" />
                </MenuItem>
                <MenuItem Header="{x:Static l:Resources.MainWindow_MenuSettings}" Command="{Binding OpenSettings}" />
                <MenuItem Header="{x:Static l:Resources.MainWindow_MenuCanChangeOfficialFields}" IsChecked="{Binding ProtectMatchInfo.Value}" Command="{Binding ProtectMatchInfoClick}" />
            </MenuItem>
            <MenuItem Header="{x:Static l:Resources.MainWindow_MenuHelp}">
                <MenuItem Header="{x:Static l:Resources.MainWindow_MenuProgramUpdates}" Command="{Binding AppUpdate}" />
                <MenuItem Header="{x:Static l:Resources.MainWindow_SubmitTranslationError}" Command="{Binding TranslationError}" />
                <MenuItem Header="{x:Static l:Resources.MainWindow_OpenLogbook}" Command="{Binding ShowLogBook}" CommandParameter="{Binding ElementName=LogBookButton}"/>
                <MenuItem Header="{x:Static l:Resources.MainWindow_MenuAbout}" Command="{Binding About}">
                    <MenuItem.Icon>
                        <Image Source="/images/ico_about.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>
        <!--Height="82"-->
        <Border BorderThickness="0 0 0 1" MinHeight="82" BorderBrush="DarkGray" DockPanel.Dock="Top" Background="{x:Static SystemColors.ControlBrush}" Visibility="{Binding IsNavigationVisible.Value, Converter={StaticResource VisibilityConverter}}" x:Name="TheNavigationBar">
            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Hidden">
                <ItemsControl ItemsSource="{Binding Screens}" Margin="15 8 8 8">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button Content="{Binding Text.Value}" Margin="0 0 20 0" Command="{Binding Click}" CommandParameter="{Binding .}">
                                <Button.Effect>
                                    <DropShadowEffect Color="Black" Direction="320" ShadowDepth="5" BlurRadius="10" Opacity="0.3" />
                                </Button.Effect>
                                <Button.Template>
                                    <ControlTemplate>
                                        <Canvas Width="200" Height="65" ToolTip="{Binding Status.Value, Converter={StaticResource StatusTooltipConverter}}">
                                            <Border Canvas.Left="0" Canvas.Right="0" Canvas.Top="0" Canvas.Bottom="0" Width="200" Height="65" BorderThickness="1" BorderBrush="DarkGray" x:Name="TheBorder">
                                                <Border.Background>
                                                    <MultiBinding Converter="{StaticResource StatusBackgroundConverter}">
                                                        <Binding Path="Status.Value"/>
                                                        <Binding ElementName="TheBorder" Path="IsMouseOver"/>
                                                        <Binding Path="IsActive.Value"/>
                                                    </MultiBinding>
                                                </Border.Background>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Viewbox Grid.Column="0" StretchDirection="DownOnly" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                        <TextBlock x:Name="TheText" Foreground="{Binding IsActive.Value, Converter={StaticResource ActiveForegroundConverter}}" FontSize="20px" FontWeight="Bold" TextAlignment="Center" Text="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Padding="5">
                                                            <TextBlock.Effect>
                                                                <DropShadowEffect Color="DarkGray" Direction="320" ShadowDepth="1" BlurRadius="3" Opacity="0.5" />
                                                            </TextBlock.Effect>
                                                        </TextBlock>
                                                    </Viewbox>
                                                    <Grid Grid.Column="1" Visibility="{Binding ShowResults.Value, Converter={StaticResource VisibilityConverter}}">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                        </Grid.RowDefinitions>
                                                        <Grid.Background>
                                                            <MultiBinding Converter="{StaticResource ResultConverter}">
                                                                <Binding Path="HomeMatchesWon.Value"/>
                                                                <Binding Path="AwayMatchesWon.Value"/>
                                                            </MultiBinding>
                                                        </Grid.Background>
                                                        <Border Grid.Row="0" Width="30px" BorderBrush="DarkGray" BorderThickness="1 0 0 0.5">
                                                            <TextBlock FontSize="20px" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding HomeMatchesWon.Value}"/>
                                                        </Border>
                                                        <Border Grid.Row="1" Width="30px" BorderBrush="DarkGray" BorderThickness="1 0.5 0 0">
                                                            <TextBlock  FontSize="20px" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding AwayMatchesWon.Value}"/>
                                                        </Border>
                                                    </Grid>
                                                </Grid>
                                            </Border>
                                            <TextBlock Canvas.Left="3" Canvas.Top="0" FontSize="12px" Text="★">
                                                <TextBlock.Foreground>
                                                    <MultiBinding Converter="{StaticResource StatusFillConverter}">
                                                        <Binding Path="Status.Value"/>
                                                        <Binding Path="IsActive.Value"/>
                                                    </MultiBinding>
                                                </TextBlock.Foreground>
                                            </TextBlock>
                                        </Canvas>
                                    </ControlTemplate>
                                </Button.Template>
                                <Button.ContextMenu>
                                    <ContextMenu Visibility="{Binding Context, Converter={StaticResource ContextMenuEnabledConverter}}">
                                        <MenuItem Header="{x:Static l:Resources.MainWindow_PopupMenuClose}" Command="{Binding Close}" />
                                        <MenuItem Header="{x:Static l:Resources.MainWindow_PopupMenuPrint}" Command="{Binding Print}" />
                                    </ContextMenu>
                                </Button.ContextMenu>
                            </Button>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </ScrollViewer>
        </Border>
        <StatusBar DockPanel.Dock="Bottom" BorderThickness="0 1 0 0" Height="32" BorderBrush="DarkGray" Background="{x:Static SystemColors.ControlBrush}">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem>
                <Button x:Name="LogBookButton" Padding="3" Command="{Binding ShowLogBook}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/images/i16_log.png" Width="16" Height="16" />
                        <TextBlock Margin="5 0" Text="{x:Static l:Resources.MainWindow_LogBook}"/>
                    </StackPanel>
                </Button>
            </StatusBarItem>
            <StatusBarItem Grid.Column="1">
                <TextBlock Text="{Binding LatestStatus.Value}" />
            </StatusBarItem>
            <Separator Grid.Column="2" Background="White" />
            <StatusBarItem Grid.Column="3">
                <Button Command="{Binding SelectLanguage}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="LanguageBorder" Padding="3">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Image Grid.Column="0" Width="16" Height="16" Source="{Binding SelectedLanguage.Value, Converter={StaticResource FlagConverter}}" />
                                    <TextBlock Visibility="{Binding SelectedLanguage.Value, Converter={StaticResource CultureRestartConverter}}" Grid.Column="1" VerticalAlignment="Center" Margin="5 0 0 0" Foreground="Red" Text="{x:Static l:Resources.MainWindow_RestartRequired}"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="LanguageBorder" Value="{x:Static SystemColors.ControlLightLightBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </StatusBarItem>
            <Separator Grid.Column="4" Background="White" />
            <StatusBarItem Grid.Column="5" Margin="0 0 20 0">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="0 0 5 0" Text="{x:Static l:Resources.MainWindow_Zoom}"/>
                    <Slider Value="{Binding ZoomLevel.Value}" Minimum="0.75" Maximum="4" x:Name="ZoomSlider" Width="100"/>
                    <ComboBox SelectedValuePath="Content" SelectedValue="{Binding ZoomLevel.Value, Converter={StaticResource PercentageConverter}}" Text="{Binding ZoomLevel.Value, Converter={StaticResource PercentageConverter}, UpdateSourceTrigger=Explicit}" KeyDown="ComboBox_KeyDown" IsEditable="True" Width="60" x:Name="ZoomCombo">
                        <ComboBox.Items>
                            <ComboBoxItem>75%</ComboBoxItem>
                            <ComboBoxItem>100%</ComboBoxItem>
                            <ComboBoxItem>150%</ComboBoxItem>
                            <ComboBoxItem>200%</ComboBoxItem>
                            <ComboBoxItem>400%</ComboBoxItem>
                        </ComboBox.Items>
                    </ComboBox>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
        <TextBlock DockPanel.Dock="Bottom" Background="Pink" Foreground="Red" Padding="10 4" Text="{Binding UpdateText.Value}" Visibility="{Binding UpdateText.Value, Converter={StaticResource UpdateStatusVisibilityConverter}}"/>
        <ContentControl behaviors:MouseTrackingBehavior.OnMouseEnter="{Binding HideNavigation}">
            <ContentControl.Content>
                <MultiBinding Converter="{StaticResource ZoomableConverter}">
                    <MultiBinding.Bindings>
                        <Binding Path="CurrentScreen.Value" />
                        <Binding Path="ZoomLevel" />
                    </MultiBinding.Bindings>
                </MultiBinding>                    
            </ContentControl.Content>
        </ContentControl>
    </DockPanel> 
</Window>
